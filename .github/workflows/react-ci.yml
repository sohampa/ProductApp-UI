name: CI Pipeline - React App

on:
  push:
    branches: [ "feature-Implement-CI-pipeline" ]
  pull_request:
    branches: [ "feature-Implement-CI-pipeline" ]

jobs:
  build:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ProductApp-UI   # ðŸ‘ˆ important so npm finds package.json

    steps:
      # 1. Code Checkout
      - name: Checkout Code
        uses: actions/checkout@v4

      # 2. Setup Node.js Environment
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # 3. Install Dependencies
      - name: Install Dependencies
        run: npm install

      # 4. Build React App
      - name: Build React App
        run: npm run build

      # 5. Static Code Analysis (ESLint)
      - name: Run ESLint
        run: npm run lint

      # 6. Security Scan (npm audit)
      - name: Run Security Scan
        run: npm audit --audit-level=high || true

      # 7. Login to DockerHub
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 8. Build & Tag Docker Images (latest + datetime)
      - name: Build Docker Image
        run: |
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          IMAGE_NAME=${{ secrets.DOCKER_USERNAME }}/react-app
          docker build -t $IMAGE_NAME:latest -t $IMAGE_NAME:$TIMESTAMP .

          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV
          echo "TIMESTAMP=$TIMESTAMP" >> $GITHUB_ENV

      # 9. Push Docker Images
      - name: Push Docker Images
        run: |
          docker push $IMAGE_NAME:latest
          docker push $IMAGE_NAME:$TIMESTAMP
